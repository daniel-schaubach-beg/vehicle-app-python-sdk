"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the MIT license.

*
The streaming contract between applications

This contract is used to stream data from a service application registered as provider and
a service application that is a consumer. This interface will be discovered using the
`Discover` intent through the chariott runtime. The communication is done after discovery
peer to peer without chariott being involved. Only the subscription of sources will be
handled by chariott again, but data flows peer to peer without chariott in between.
More details found here:
[ADR-0016](docs/adr/ctp-2/0016-streaming-support.md)
"""
import builtins
import chariott.common.v1.common_pb2
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class OpenRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___OpenRequest = OpenRequest

class Event(google.protobuf.message.Message):
    """*
    The event that is sent over the channel.

    The first response is sending the metadata containing the channel id that was created to be used
    for subscribing to sources. The metadata field is called `x-chariott-channel-id`. The channel id
    has to be used to subscribe to sources as defined in the `chariott.runtime.v1.proto` file.

    Each subscribed source will be sending an event through this response stream once subscribed to
    and if an event occurs.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SOURCE_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    SEQ_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    source: builtins.str
    """The source id of the event"""
    @property
    def value(self) -> chariott.common.v1.common_pb2.Value:
        """The value of the event"""
    seq: builtins.int
    """The sequence number of the event"""
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The timestamp at which the event was generated"""
    def __init__(
        self,
        *,
        source: builtins.str = ...,
        value: chariott.common.v1.common_pb2.Value | None = ...,
        seq: builtins.int = ...,
        timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["timestamp", b"timestamp", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["seq", b"seq", "source", b"source", "timestamp", b"timestamp", "value", b"value"]) -> None: ...

global___Event = Event
